/* More dynamic color system */
:root {
  --hue-1: 330;
  --hue-2: 180;
  --hue-3: 60;
}

.blob-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none; /* keeps blobs from blocking clicks */
}

.blob {
  position: absolute;
  border-radius: 60% 40% 55% 45% / 50% 55% 45% 60%;
  filter: blur(15px);
  opacity: 0.9;
  mix-blend-mode: screen;
  animation: float 12s ease-in-out infinite,
    morph 8s ease-in-out infinite alternate, colorShift 20s ease-in-out infinite;
  /* Add mouse movement on top of existing animations */
  transform: translate(var(--mouse-x, 0), var(--mouse-y, 0)) translate(0, 0)
    scale(1) rotate(0deg); /* This will be overridden by animation */
}

/* Color-shifting blobs */
.blob-1 {
  width: 2450px;
  height: 2450px;
  background: #780d0d;
  top: -10%;
  left: -5%;
}

.blob-2 {
  width: 1920px;
  height: 1920px;
  background: rgb(255, 4, 4);
  top: -12%;
  left: 50%;
  left: calc(50% - 210px); /* Center it manually (half of 420px width) */
  animation-delay: -2s;
}

.blob-3 {
  width: 800px;
  height: 800px;
  background: #d67806;
  top: -8%;
  right: -8%;
  animation-delay: -4s;
}

/* Dynamic animations */
@keyframes float {
  0%,
  100% {
    transform: translate(var(--mouse-x, 0), var(--mouse-y, 0)) translate(0, 0)
      scale(1) rotate(0deg);
  }
  25% {
    transform: translate(var(--mouse-x, 0), var(--mouse-y, 0))
      translate(80px, -60px) scale(1.1) rotate(5deg);
  }
  50% {
    transform: translate(var(--mouse-x, 0), var(--mouse-y, 0))
      translate(-70px, 50px) scale(0.9) rotate(-5deg);
  }
  75% {
    transform: translate(var(--mouse-x, 0), var(--mouse-y, 0))
      translate(60px, 70px) scale(1.05) rotate(3deg);
  }
}

@keyframes morph {
  0%,
  100% {
    border-radius: 60% 40% 55% 45% / 50% 55% 45% 60%;
  }
  50% {
    border-radius: 40% 60% 45% 55% / 60% 45% 55% 50%;
  }
}

@keyframes colorShift {
  0% {
    --hue-1: 330;
    --hue-2: 180;
    --hue-3: 60;
  }
  33% {
    --hue-1: 280;
    --hue-2: 160;
    --hue-3: 40;
  }
  66% {
    --hue-1: 300;
    --hue-2: 200;
    --hue-3: 80;
  }
  100% {
    --hue-1: 330;
    --hue-2: 180;
    --hue-3: 60;
  }
}

/* Interactive noise */
.noise-overlay {
  position: absolute;
  top: -50%;
  left: -50%;
  width: 150%;
  height: 150%;
  pointer-events: none;
  z-index: 5;
  mix-blend-mode: overlay;
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 800 800' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='5' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)' opacity='0.3'/%3E%3C/svg%3E");
  animation: grain 20s linear infinite;
}

@keyframes grain {
  0%,
  100% {
    transform: translate(0, 0) scale(1);
  }
  50% {
    transform: translate(-2%, 1%) scale(1.02);
  }
}

.holding-page {
  width: 100%;
  height: 100%;
  overflow: hidden;
  background: #0a0a0a;
}

/* Modern typography with perfect centering */
.holding-page-wrapper {
  position: relative;
  z-index: 10;
  color: white;
  text-align: center;
  display: flex;
  flex-direction: column;
  height: 100vh; /* Full viewport height for vertical centering */
  width: 100vw; /* Full viewport width for horizontal centering */
}

.holding-page-inner-container {
  /* This wrapper controls the spacing between h1 and p */
  display: flex;
  flex-direction: column;
  gap: 0.5rem; /* Reduced from the default 1rem margin */
  flex: 1;
  align-items: center;
  justify-content: center;
}

h1 {
  font-size: clamp(2rem, 5vw, 4rem);
  color: white;
  font-weight: 700;
  letter-spacing: -0.02em;
  text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
}

p {
  font-size: clamp(1rem, 2vw, 1.2rem);
  max-width: 600px;
  line-height: 1.6;
  opacity: 0.9;
  font-weight: 300;
  color: white;
  text-shadow: 0 1px 5px rgba(0, 0, 0, 0.3);
}

.button {
  color: white;
  text-decoration: none;
  border: 1px solid rgba(255, 255, 255, 0.3);
  padding: 0.5rem 1rem;
  border-radius: 4px;
  transition: all 0.3s ease;
  font-size: 0.9rem;
  display: inline-block; /* Ensures proper button spacing */
  margin-top: 0.5rem; /* Adds visual separation */
}
.button:hover {
  background: rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.6);
}

/* Subtle cursor interaction */
body:hover .blob {
  filter: blur(20px) brightness(1.1);
  transition: filter 0.3s ease;
}
